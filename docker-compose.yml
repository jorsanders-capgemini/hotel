version: '3.7'

services:
  springapi:
    container_name: "${PROJECTNAME}-springapi-${OPENJDKVERSION}"
    build:
      context: "./dockerfiles/openjdk"
      dockerfile: "Dockerfile"
      args:
        OPENJDKVERSION: "${OPENJDKVERSION}"
        MAVENVERSION: "${MAVENVERSION}"
    volumes:
      - "./hotel.api:/app"
      - "./dockerfiles/openjdk/entrypoint.sh:/usr/local/bin/entrypoint.sh"
    ports:
      - "${SPRINGAPIPORT}:8080"
      - "${SPRINGDEBUGPORT}:5005"
    working_dir: '/app'
    entrypoint: 'sh /usr/local/bin/entrypoint.sh'
    depends_on:
      - 'mysql'
    networks:
      static-network:
  angularwebapp:
    container_name: "${PROJECTNAME}-angularwebapp-${NODEJSVERSION}"
    build:
      context: "./dockerfiles/angular"
      dockerfile: "Dockerfile"
      args:
        NODEJSVERSION: "${NODEJSVERSION}"
    volumes:
      - "./hotel.webapp:/app"
      - "./dockerfiles/angular/entrypoint.sh:/usr/local/bin/entrypoint.sh"
    ports:
      - "${ANGULARPORT}:4200"
    working_dir: '/app'
    entrypoint: 'ng serve --host 0.0.0.0'
    depends_on:
      - 'springapi'
    networks:
      static-network:
  mysql:
    container_name: "${PROJECTNAME}-mysql-${MYSQLVERSION}"
    image: "mysql:${MYSQLVERSION}"
    volumes:
      - "./mysql-${MYSQLVERSION}:/var/lib/mysql"
    ports:
      - "${MYSQLPORT}:3306"
    working_dir: "/var/lib/mysql"
    environment:
      - "MYSQL_ROOT_PASSWORD=${ROOTPASS}"
      - "MYSQL_DATABASE=${DBNAME}"
      - "MYSQL_USER=${DBUSER}"
      - "MYSQL_PASSWORD=${DBPASS}"
    networks:
      static-network:
networks:
  static-network:
    name: "${PROJECTNAME}-static-network"