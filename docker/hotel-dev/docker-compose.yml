version: '3.7'

services:
  springapi:
    container_name: "${PROJECTNAME}-springapi-${OPENJDKVERSION}-${ENVTYPE}"
    build:
      context: './dockerfiles/springapi'
      dockerfile: 'Dockerfile'
      args:
        OPENJDKVERSION: "${OPENJDKVERSION}"
        MAVEN_VERSION: "${MAVENVERSION}"
    volumes:
      - "${PROJECTROOT}/springapi:/app"
      - "./dockerfiles/springapi/entrypoint.sh:${ENTRYPOINTMOUNT}"
      - './config/springapi/application.properties:/app/src/main/java/resources/application.properties'
    ports:
      - "${SPRINGAPIPORT}:8080"
      - "${SPRINGDEBUGPORT}:5005"
    working_dir: '/app'
    entrypoint: "sh ${ENTRYPOINTMOUNT}"
    depends_on:
      - 'mysql'
    networks:
      main:
  angularwebapp:
    container_name: "${PROJECTNAME}-angularwebapp-${NODEJSVERSION}-${ENVTYPE}"
    build:
      context: './dockerfiles/angularwebapp'
      dockerfile: 'Dockerfile'
      args:
        NODEJSVERSION: "${NODEJSVERSION}"
    volumes:
      - "${PROJECTROOT}/angularwebapp:/app"
      - '/app/node_modules'
      - "./dockerfiles/angularwebapp/entrypoint.sh:${ENTRYPOINTMOUNT}"
    ports:
      - "${ANGULARPORT}:4200"
    working_dir: '/app'
    entrypoint: "sh ${ENTRYPOINTMOUNT}"
    networks:
      main:
  mysql:
    container_name: "${PROJECTNAME}-mysql-${MYSQLVERSION}-${ENVTYPE}"
    image: "mysql:${MYSQLVERSION}"
    volumes:
      - "./mysql-${MYSQLVERSION}:/var/lib/mysql"
    ports:
      - "${MYSQLPORT}:3306"
    working_dir: '/var/lib/mysql'
    environment:
      - "MYSQL_ROOT_PASSWORD=${ROOTPASS}"
      - "MYSQL_DATABASE=${DBNAME}"
      - "MYSQL_USER=${DBUSER}"
      - "MYSQL_PASSWORD=${DBPASS}"
    networks:
      main:
networks:
  main:
    name: "${PROJECTNAME}-${ENVTYPE}-main-network"